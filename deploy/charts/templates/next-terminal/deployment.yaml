apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-next-terminal
  namespace: {{ include "release_namespace" . }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.web.commonLabels "context" $ ) | nindent 4 }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.web.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}

spec: 
  # TODO test mutiple replicas
  replicas: 1
  {{- $podLabels := include "common.tplvalues.merge" ( dict "values" ( list .Values.web.podLabels .Values.web.commonLabels ) "context" . ) }}

  selector:
    matchLabels: {{- include "common.labels.matchLabels" ( dict "customLabels" $podLabels "context" $ ) | nindent 6 }}
  template:
    metadata:
      annotations:
        {{- if .Values.podAnnotations }}
        {{- include "common.tplvalues.render" (dict "value" .Values.web.podAnnotations "context" $) | nindent 8 }}
        {{- end }}
      labels: {{- include "common.labels.standard" ( dict "customLabels" $podLabels "context" $ ) | nindent 8 }}
        app.kubernetes.io/component: web
        app.kubernetes.io/part-of: next-terminal
    spec:
      {{- include "next-terminal.imagePullSecrets" . | nindent 6 }}
      {{- if .Values.affinity }}
      affinity: {{- include "common.tplvalues.render" (dict "value" .Values.web.affinity "context" $) | nindent 8 }}
      {{- else }}
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.web.podAffinityPreset "customLabels" $podLabels "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.web.podAntiAffinityPreset "customLabels" $podLabels "context" $) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.web.nodeAffinityPreset.type "key" .Values.web.nodeAffinityPreset.key "values" .Values.web.nodeAffinityPreset.values) | nindent 10 }}
      {{- end }}
      {{- if .Values.web.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" (dict "value" .Values.web.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.web.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.web.tolerations "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.web.priorityClassName }}
      priorityClassName: {{ .Values.web.priorityClassName | quote }}
      {{- end }}
      {{- if .Values.web.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.web.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      containers:
        - name: web
          image: {{ include "common.images.image" (dict "imageRoot" .Values.web.image "global" .Values.global) }}
          imagePullPolicy: {{ .Values.web.image.pullPolicy | quote }}
          {{- if .Values.web.resources }}
          resources: {{- toYaml .Values.web.resources | nindent 12 }}
          {{- end }}
          {{ if .Values.web.command }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.web.command "context" $) | nindent 12 }}
          {{- end }}
          env:
            - name: DB
              value: mysql
          ports:
            - name: http
              containerPort: {{ .Values.web.service.ports.http }}
              protocol: TCP
          {{- if .Values.web.sshd.enabled}}
            - name: sshd
              containerPort: {{ .Values.web.service.ports.sshd }}
              protocol: TCP
          {{- end  }}
          livenessProbe:
            tcpSocket:
              port: {{ .Values.web.service.ports.http }}
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            tcpSocket:
              port: {{ .Values.web.service.ports.http }}
            initialDelaySeconds: 5
            periodSeconds: 10
          volumeMounts:
          {{- if .Values.nfs.enabled }}
            - name: next-terminal-data
              mountPath: {{ .Values.web.dataPath }}
          {{- end }}
          {{- if .Values.web.sshd.enabled }}
            - name: ssh-key
              mountPath: {{ .Values.web.sshd.keyPath | quote}} 
              subPath: sshkey 
              readOnly: true
          {{- end  }}
            - name: nt-config
              mountPath: "/etc/next-terminal/config.yml"
              readOnly: true
              subPath: config.yml

      restartPolicy: {{ .Values.web.restartPolicy | quote }}
      volumes:
        - name: nt-config
          configMap: 
            name: {{ template "next-terminal.fullname" . }}-cm
      {{- if .Values.nfs.enabled }}
        - name: next-terminal-data
          persistentVolumeClaim:
            claimName: {{ include "next-terminal.pvc" . }}
      {{- end  }}
      {{- if .Values.web.sshd.enabled }}
        - name: ssh-key
          secret:
            secretName: {{ include "next-terminal.web.sshd.secretName" . }}
      {{- end }}
